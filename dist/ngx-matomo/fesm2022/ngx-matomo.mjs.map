{"version":3,"file":"ngx-matomo.mjs","sources":["../../../projects/ngx-matomo/src/lib/matomo-configuration.ts","../../../projects/ngx-matomo/src/lib/matomo-functions.ts","../../../projects/ngx-matomo/src/lib/matomo-tracker.service.ts","../../../projects/ngx-matomo/src/lib/matomo-inject-tracking-script.ts","../../../projects/ngx-matomo/src/lib/matomo-route-tracker.service.ts","../../../projects/ngx-matomo/src/lib/matomo-providers.ts","../../../projects/ngx-matomo/src/lib/matomo-features.ts","../../../projects/ngx-matomo/src/public-api.ts","../../../projects/ngx-matomo/src/ngx-matomo.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\ntype ClickTrackingOption = 'NONE' | 'LEFT_CLICK_ONLY' | 'LEFT_MIDDLE_RIGHT_CLICKS';\n\nexport type MatomoConsentRequirement = 'NONE' | 'COOKIE' | 'TRACKING';\n\nexport type MatomoRouteData = {\n  tracking?: 'AUTO' | 'OFF';\n  title?: string;\n  idRegExp?: RegExp;\n};\n\nexport type MatomoTrackers = {\n  /**\n   * URL of the Matomo JS script to execute.\n   */\n  scriptUrl?: string;\n  /**\n   * Array of trackers, each one of them being described by its URL and site id.\n   */\n  trackers: { trackerUrl: string; siteId: number }[];\n};\n\nexport const defaultTrackers: Promise<MatomoTrackers> = Promise.resolve({\n  trackers: [],\n});\n\nexport type MatomoTrackingConfiguration = {\n  disableCrossDomainLinking?: boolean; // TODO: currently inactive\n  disableCookies?: boolean;\n  secureCookie?: boolean;\n  cookieDomain?: string;\n  cookiePath?: string;\n  cookieSameSite?: 'Lax' | 'Strict' | 'None';\n  doNotUserSendBeacon?: boolean;\n  detectBrowserFeatures?: boolean;\n  enableDoNotTrack?: boolean;\n  consentRequirement?: MatomoConsentRequirement;\n  trackJavaScriptErrors?: boolean;\n  localDomains?: string[];\n  heartBeatTimer?: number;\n  customDimensions?: { index: number; value: string }[];\n  disableCampaignParametersTracking?: boolean;\n};\n\nexport const defaultTrackingConfiguration: MatomoTrackingConfiguration = {\n  disableCrossDomainLinking: false,\n  disableCookies: false,\n  doNotUserSendBeacon: false,\n  enableDoNotTrack: false,\n  consentRequirement: 'NONE',\n  detectBrowserFeatures: false,\n  trackJavaScriptErrors: false,\n  disableCampaignParametersTracking: false,\n};\n\nexport type MatomoRouteTrackingConfiguration = {\n  linkTracking: ClickTrackingOption;\n  clearIds: boolean;\n  idRegExp?: RegExp;\n  idReplacement?: string;\n  clearMatrixParams: boolean;\n  clearQueryParams: boolean;\n  clearHash: boolean;\n};\n\nexport const defaultRouteTrackingConfiguration: MatomoRouteTrackingConfiguration = {\n  linkTracking: 'NONE',\n  clearIds: false,\n  idReplacement: ':id',\n  clearMatrixParams: false,\n  clearQueryParams: false,\n  clearHash: false,\n};\n\n/**\n * Injection token for internal Matomo trackers.\n */\nexport const MATOMO_TRACKERS_INTERNAL_CONFIGURATION = new InjectionToken<MatomoTrackers>(\n  'Matomo trackers internal configuration',\n);\n\n/**\n * Injection token for internal Matomo tracking configuration.\n */\nexport const MATOMO_TRACKING_INTERNAL_CONFIGURATION =\n  new InjectionToken<MatomoTrackingConfiguration>('Matomo tracking internal configuration');\n\n/**\n * Injection token for internal Matomo route tracking configuration.\n */\nexport const MATOMO_ROUTE_TRACKING_INTERNAL_CONFIGURATION =\n  new InjectionToken<MatomoRouteTrackingConfiguration>(\n    'Matomo route tracking internal configuration',\n  );\n\n/**\n * Injection token for Matomo debug tracing.\n */\nexport const MATOMO_DEBUG_TRACING = new InjectionToken<boolean>('Matomo debug tracing');\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { InjectionToken } from '@angular/core';\n\nimport './matomo-configuration';\n\nexport const MATOMO_TRACKER_SET_FUNCTION = new InjectionToken<\n  (command: string, ...args: unknown[]) => void\n>('Matomo tracker set function');\n\nexport function setFunctionFactory(dummyMode = false, debugTracing = false) {\n  return !dummyMode\n    ? function (method: string, ...args: unknown[]) {\n        if (debugTracing)\n          console.debug(\n            `\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸš€ Call tracker Set method \\x1B[4m${method}\\x1B[m with`,\n            args,\n          );\n        try {\n          window['_paq'].push([method, ...args]);\n        } catch (e) {\n          if (!(e instanceof ReferenceError)) throw e;\n        }\n      }\n    : function (method: string, ...args: unknown[]) {\n        if (debugTracing)\n          console.debug(\n            `\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸš€ Call dummy tracker Set method \\x1B[4m${method}\\x1B[m with`,\n            args,\n          );\n      };\n}\n\nexport const MATOMO_TRACKER_GET_FUNCTION = new InjectionToken<\n  <T>(func: string, ...args: unknown[]) => Promise<T>\n>('Matomo tracker get function');\n\nexport function getFunctionFactory(dummyMode = false, debugTracing = false) {\n  return !dummyMode\n    ? function <T>(method: string, ...args: unknown[]) {\n        if (debugTracing)\n          console.debug(\n            `\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸš€ Call tracker Get method \\x1B[4m${method}\\x1B[m with`,\n            args,\n          );\n        return new Promise((resolve, reject) => {\n          try {\n            window['_paq'].push([\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              function (this: any): void {\n                resolve(this[method](args) as T);\n              },\n            ]);\n          } catch (e) {\n            if (!(e instanceof ReferenceError)) reject(e);\n          }\n        });\n      }\n    : function (method: string, ...args: unknown[]) {\n        if (debugTracing)\n          console.debug(\n            `\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸš€ Call dummy tracker Get method \\x1B[4m${method}\\x1B[m with`,\n            args,\n          );\n        return Promise.resolve();\n      };\n}\n\nexport const MATOMO_TRACKER_INVOKE_FUNCTION = new InjectionToken<\n  (command: string, callback: Function) => void\n>('Matomo tracker invoke function');\n\nexport function invokeFunctionFactory(dummyMode = false, debugTracing = false) {\n  return !dummyMode\n    ? function (method: string, callback: Function) {\n        if (debugTracing)\n          console.debug(\n            `\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸš€ Call tracker Invoke method \\x1B[4m${method}\\x1B[m with`,\n            callback,\n          );\n        try {\n          window['_paq'].push([method, callback]);\n        } catch (e) {\n          if (!(e instanceof ReferenceError)) throw e;\n        }\n      }\n    : function (method: string, callback: Function) {\n        if (debugTracing)\n          console.debug(\n            `\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸš€ Call dummy tracker Invoke method \\x1B[4m${method}\\x1B[m with`,\n            callback,\n          );\n      };\n}\n","import { Injectable, inject } from '@angular/core';\n\nimport {\n  MATOMO_TRACKER_GET_FUNCTION,\n  MATOMO_TRACKER_INVOKE_FUNCTION,\n  MATOMO_TRACKER_SET_FUNCTION,\n} from './matomo-functions';\n\ndeclare global {\n  /**\n   * Extend Window interface in order to introduce the Matomo _paq attribute\n   */\n  // eslint-disable-next-line @typescript-eslint/consistent-type-definitions\n  interface Window {\n    _paq: { push: (args: unknown[]) => void };\n  }\n}\n\n/**\n * Matomo scope\n */\ntype MatomoScope = 'page' | 'visit' | 'event';\n\n/**\n * Wrapper for functions available in the Matomo Javascript tracker.\n *\n * @export\n */\n@Injectable({ providedIn: 'root' })\nexport class MatomoTracker {\n  private setFunction = inject(MATOMO_TRACKER_SET_FUNCTION);\n  private getFunction = inject(MATOMO_TRACKER_GET_FUNCTION);\n  private invokeFunction = inject(MATOMO_TRACKER_INVOKE_FUNCTION);\n\n  constructor() {\n    try {\n      if (typeof window['_paq'] === 'undefined') {\n        console.warn('Matomo has not yet been initialized!');\n      }\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) throw e;\n    }\n  }\n\n  /**\n   * Logs a visit to this page.\n   *\n   * @param [customTitle] Optional title of the visited page.\n   */\n  trackPageView(customTitle?: string): void {\n    const args: unknown[] = [];\n    if (customTitle) {\n      args.push(customTitle);\n    }\n    this.setFunction('trackPageView', args);\n  }\n\n  /**\n   * Logs an event with an event category (Videos, Music, Gamesâ€¦), an event action (Play, Pause, Duration,\n   * Add Playlist, Downloaded, Clickedâ€¦), and an optional event name and optional numeric value.\n   *\n   * @param category Category of the event.\n   * @param action Action of the event.\n   * @param [name] Optional name of the event.\n   * @param [value] Optional value for the event.\n   */\n  trackEvent(category: string, action: string, name?: string, value?: number): void {\n    const args: unknown[] = [category, action];\n    if (name) {\n      args.push(name);\n      if (typeof value === 'number') {\n        args.push(value);\n      }\n    }\n    this.setFunction('trackEvent', ...args);\n  }\n\n  /**\n   * Logs an internal site search for a specific keyword, in an optional category,\n   * specifying the optional count of search results in the page.\n   *\n   * @param keyword Keywords of the search query.\n   * @param [category] Optional category of the search query.\n   * @param [resultsCount] Optional number of results returned by the search query.\n   */\n  trackSiteSearch(keyword: string, category?: string, resultsCount?: number): void {\n    const args: unknown[] = [keyword];\n    if (category) {\n      args.push(category);\n      if (typeof resultsCount === 'number') {\n        args.push(resultsCount);\n      }\n    }\n    this.setFunction('trackSiteSearch', ...args);\n  }\n\n  /**\n   * Manually logs a conversion for the numeric goal ID, with an optional numeric custom revenue customRevenue.\n   *\n   * @param idGoal numeric ID of the goal to log a conversion for.\n   * @param [customRevenue] Optional custom revenue to log for the goal.\n   */\n  trackGoal(idGoal: number, customRevenue?: number): void {\n    const args: unknown[] = [idGoal];\n    if (typeof customRevenue === 'number') {\n      args.push(customRevenue);\n      this.setFunction('trackGoal', ...args);\n    }\n  }\n\n  /**\n   * Manually logs a click from your own code.\n   *\n   * @param url Full URL which is to be tracked as a click.\n   * @param linkType Either 'link' for an outlink or 'download' for a download.\n   */\n  trackLink(url: string, linkType: 'link' | 'download'): void {\n    this.setFunction('trackLink', url, linkType);\n  }\n\n  /**\n   * Scans the entire DOM for all content blocks and tracks all impressions once the DOM ready event has been triggered.\n   *\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackAllContentImpressions(): void {\n    this.setFunction('trackAllContentImpressions');\n  }\n\n  /**\n   * Scans the entire DOM for all content blocks as soon as the page is loaded.<br />\n   * It tracks an impression only if a content block is actually visible.\n   *\n   * @param checkOnScroll If true, checks for new content blocks while scrolling the page.\n   * @param timeInterval Duration, in milliseconds, between two checks upon scroll.\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackVisibleContentImpressions(checkOnScroll: boolean, timeInterval: number): void {\n    this.setFunction('trackVisibleContentImpressions', checkOnScroll, timeInterval);\n  }\n\n  /**\n   * Scans the given DOM node and its children for content blocks and tracks an impression for them\n   * if no impression was already tracked for it.\n   *\n   * @param node DOM node in which to look for content blocks which have not been previously tracked.\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackContentImpressionsWithinNode(node: Node): void {\n    this.setFunction('trackContentImpressionsWithinNode', node);\n  }\n\n  /**\n   * Tracks an interaction with the given DOM node/content block.\n   *\n   * @param node DOM node for which to track a content interaction.\n   * @param contentInteraction Name of the content interaction.\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackContentInteractionNode(node: Node, contentInteraction: string): void {\n    this.setFunction('trackContentInteractionNode', node, contentInteraction);\n  }\n\n  /**\n   * Tracks a content impression using the specified values.\n   *\n   * @param contentName Content name.\n   * @param contentPiece Content piece.\n   * @param contentTarget Content target.\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackContentImpression(contentName: string, contentPiece: string, contentTarget: string): void {\n    this.setFunction('trackContentImpression', contentName, contentPiece, contentTarget);\n  }\n\n  /**\n   * Tracks a content interaction using the specified values.\n   *\n   * @param contentInteraction Content interaction.\n   * @param contentName Content name.\n   * @param contentPiece Content piece.\n   * @param contentTarget Content target.\n   * @see {@link https://developer.matomo.org/guides/content-tracking|Content Tracking}\n   */\n  trackContentInteraction(\n    contentInteraction: string,\n    contentName: string,\n    contentPiece: string,\n    contentTarget: string,\n  ): void {\n    this.setFunction(\n      'trackContentInteraction',\n      contentInteraction,\n      contentName,\n      contentPiece,\n      contentTarget,\n    );\n  }\n\n  /**\n   * Logs all found content blocks within a page to the console.<br />\n   * This is useful to debug / test content tracking.\n   */\n  logAllContentBlocksOnPage(): void {\n    this.setFunction('logAllContentBlocksOnPage');\n  }\n\n  /**\n   * Sends a ping request.<br />\n   * Ping requests do not track new actions.\n   * If they are sent within the standard visit length, they will extend the existing visit and the current last action for the visit.\n   * If sent after the standard visit length, ping requests will create a new visit using the last action in the last known visit.<br />\n   * See also enableHeartBeatTimer.\n   */\n  ping(): void {\n    this.setFunction('ping');\n  }\n\n  /**\n   * Installs a Heart beat timer that will send additional requests to Matomo in order to better measure the time spent in the visit.\n   * These requests will be sent only when the user is actively viewing the page (when the tab is active and in focus).\n   * These requests will not track additional actions or pageviews.<br />\n   * By default, activeTimeInSeconds is set to 15 seconds. Meaning only if the page was viewed for at least 15 seconds (and the user\n   * leaves the page or focuses away from the tab) then a ping request will be sent.\n   * @param activeTimeInseconds Delay, in seconds, between two heart beats to the server.\n   * @see {@link ping}\n   * @see {@link https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page}\n   */\n  enableHeartBeatTimer(activeTimeInseconds?: number): void {\n    const args: unknown[] = [];\n    if (activeTimeInseconds) {\n      args.push(activeTimeInseconds);\n    }\n    this.setFunction('enableHeartBeatTimer', ...args);\n  }\n\n  /**\n   * Records how long the page has been viewed if the minimumVisitLength is attained;\n   * the heartBeatDelay determines how frequently to update the server.\n   *\n   * @param minimumVisitLength Duration before notifying the server for the duration of the visit to a page.\n   * @param heartBeatDelay Delay, in seconds, between two updates to the server.\n   * @see {@link https://developer.matomo.org/guides/tracking-javascript-guide#accurately-measure-the-time-spent-on-each-page}\n   */\n  setHeartBeatTimer(minimumVisitLength: number, heartBeatDelay: number): void {\n    this.setFunction('setHeartBeatTimer', minimumVisitLength, heartBeatDelay);\n  }\n\n  /**\n   * Installs link tracking on all applicable link elements.\n   *\n   * @param [enable=false] Set to true to use pseudo click-handler (treat middle click and open contextmenu as left click).<br />\n   * A right click (or any click that opens the context menu) on a link will be tracked as clicked even if \"Open in new tab\" is\n   * not selected.<br />\n   * If false (default), nothing will be tracked on open context menu or middle click.\n   */\n  enableLinkTracking(enable = false): void {\n    this.setFunction('enableLinkTracking', enable);\n  }\n\n  /**\n   * Enables tracking of `file://` protocol actions.<br />\n   * By default, the `file://` protocol is not tracked.\n   */\n  enableFileTracking() {\n    this.setFunction('enableFileTracking');\n  }\n\n  /**\n   * Disables page performance tracking.\n   */\n  disablePerformanceTracking() {\n    this.setFunction('disablePerformanceTracking');\n  }\n\n  /**\n   * Enables cross domain linking. By default, the visitor ID that identifies a unique visitor is stored in the browser's\n   * first party cookies.<br />\n   * This means the cookie can only be accessed by pages on the same domain.<br />\n   * If you own multiple domains and would like to track all the actions and pageviews of a specific visitor into the same visit,\n   * you may enable cross domain linking.<br />\n   * Whenever a user clicks on a link it will append a URL parameter pk_vid to the clicked URL which forwards the current\n   * visitor ID value to the page of the different domain.\n   *\n   * @see {@link https://matomo.org/faq/how-to/faq_23654/|Cross Domain Linking}\n   */\n  enableCrossDomainLinking(): void {\n    this.setFunction('enableCrossDomainLinking');\n  }\n\n  /**\n   * Sets the cross domain linking timeout.<br />\n   * By default, the two visits across domains will be linked together when the link is clicked and the page is loaded within\n   * a 180 seconds timeout window.\n   *\n   * @param timeout Timeout, in seconds, between two actions across two domains before creating a new visit.\n   * @see {@link https://matomo.org/faq/how-to/faq_23654/|Cross Domain Linking}\n   */\n  setCrossDomainLinkingTimeout(timeout: number): void {\n    this.setFunction('setCrossDomainLinkingTimeout', timeout);\n  }\n\n  /**\n   * Returns the query parameter to append to links to handle cross domain linking.<br />\n   * Use this to add cross domain support for links that are added to the DOM dynamically.\n   *\n   * @returns Promise object representing the `pk_vid` query parameter.\n   * @see {@link https://matomo.org/faq/how-to/faq_23654/|Cross Domain Linking}\n   */\n  getCrossDomainLinkingUrlParameter(): Promise<string> {\n    return this.getFunction<string>('getCrossDomainLinkingUrlParameter');\n  }\n\n  /**\n   * Prevents campaign parameters from being sent to the tracker.<br />\n   * By default, Matomo will send campaign parameters (mtm, utm, etc.) to the tracker and record that information.\n   * Some privacy regulations may not allow for this information to be collected.<br />\n   * This method is available as of Matomo 5.1.\n   */\n  disableCampaignParameters() {\n    this.setFunction('disableCampaignParameters');\n  }\n\n  /**\n   * Overrides document.title\n   *\n   * @param title Title of the document.\n   */\n  setDocumentTitle(title: string): void {\n    this.setFunction('setDocumentTitle', title);\n  }\n\n  /**\n   * Sets array of hostnames or domains to be treated as local.<br />\n   * For wildcard subdomains, you can use: `setDomains('.example.com')`; or `setDomains('*.example.com');`.<br />\n   * You can also specify a path along a domain: `setDomains('*.example.com/subsite1');`.\n   *\n   * @param domains List of hostnames or domains, with or without path, to be treated as local.\n   * @see {@link https://matomo.org/faq/how-to/faq_23654/|Cross Domain Linking}\n   */\n  setDomains(domains: string[]): void {\n    this.setFunction('setDomains', domains);\n  }\n\n  /**\n   * Overrides the page's reported URL.\n   *\n   * @param url URL to be reported for the page.\n   */\n  setCustomUrl(url: string): void {\n    this.setFunction('setCustomUrl', url);\n  }\n\n  /**\n   * Overrides the detected Http-Referer.\n   * Matomo recommends you call this method early in your tracking code before you call `trackPageView` if it should be applied to all tracking requests.\n   *\n   * @param url URL to be reported for the referrer.\n   */\n  setReferrerUrl(url: string): void {\n    this.setFunction('setReferrerUrl', url);\n  }\n\n  /**\n   * Sets the array of hostnames or domains that should be ignored as referrers.\n   * For wildcard subdomains, you can use: `'.example.com'` or `'*.example.com'`. You can also specify a path along a domain: setExcludedReferrers('*.example.com/subsite1');.\n   * This method is available as of Matomo 4.12.\n   * @param url URL or list of URL\n   */\n  setExcludedReferrers(url: string | string[]): void {\n    this.setFunction('setExcludedReferrers', url);\n  }\n\n  /**\n   * Returns the list of excluded referrers, which was previously set using `setExcludedReferrers`.\n   *\n   * @returns Promise objects represents the list of excluded referrers.\n   */\n  getExcludedReferrers() {\n    return this.getFunction<string[]>('getExcludedReferrers');\n  }\n\n  /**\n   * Specifies the website ID.<br />\n   * Redundant: can be specified in getTracker() constructor.\n   *\n   * TODO Investigate if setSiteId needs to be removed from MatomoTracker.\n   * @param siteId Site ID for the tracker.\n   */\n  setSiteId(siteId: number): void {\n    this.setFunction('setSiteId', siteId);\n  }\n\n  /**\n   * Specifies the Matomo HTTP API URL endpoint.<br />\n   * Points to the root directory of Matomo, e.g. http://matomo.example.org/ or https://example.org/matomo/.<br />\n   * This function is only useful when the 'Overlay' report is not working.<br />\n   * By default, you do not need to use this function.\n   *\n   * @param url URL for Matomo HTTP API endpoint.\n   */\n  setApiUrl(url: string): void {\n    this.setFunction('setApiUrl', url);\n  }\n\n  /**\n   * Specifies the Matomo server URL.<br />\n   * Redundant: can be specified in getTracker() constructor.\n   *\n   * TODO Investigate if setTrackerUrl needs to be removed from MatomoTracker.\n   * @param url URL for the Matomo server.\n   */\n  setTrackerUrl(url: string): void {\n    this.setFunction('setTrackerUrl', url);\n  }\n\n  /**\n   * Returns the Matomo server URL.\n   *\n   * @returns Promise object representing the Matomo server URL.\n   */\n  getMatomoUrl(): Promise<string> {\n    return this.getFunction<string>('getMatomoUrl');\n  }\n\n  /**\n   * Returns the current url of the page that is currently being visited.<br />\n   * If a custom URL was set before calling this method, the custom URL will be returned.\n   *\n   * @returns Promise object representing the URL of the current page.\n   */\n  getCurrentUrl(): Promise<string> {\n    return this.getFunction<string>('getCurrentUrl');\n  }\n\n  /**\n   * Disables the browser feature detection.<br />\n   * By default, Matomo accesses information from the visitor's browser to detect the current browser resolution and what browser plugins\n   * (for example PDF and cookies) are supported. This information is used to show you reports on your visitor's browser resolution, supported\n   * browser plugins, and it is also used to generate a short-lived identifier for every visitor which we call the config_id.<br />\n   * Some privacy regulations may only allow accessing information from a visitor's device after having consent. If this applies to you, call\n   * this method to no longer access this information.\n   *\n   * @see {@link https://matomo.org/faq/how-do-i-disable-browser-feature-detection-completely/|How do I disable browser feature detection completely?}\n   */\n  disableBrowserFeatureDetection(): void {\n    this.setFunction('disableBrowserFeatureDetection');\n  }\n\n  /**\n   * Enables the browser feature detection if you previously disabled it.\n   */\n  enableBrowserFeatureDetection(): void {\n    this.setFunction('enableBrowserFeatureDetection');\n  }\n\n  /**\n   * Sets classes to be treated as downloads (in addition to piwik_download).\n   *\n   * @param classes Class, or list of classes to be treated as downloads.\n   */\n  setDownloadClasses(classes: string | string[]): void {\n    this.setFunction('setDownloadClasses', classes);\n  }\n\n  /**\n   * Sets file extensions to be recognized as downloads.<br />\n   * Example: `'docx'` or `['docx', 'xlsx']`.\n   *\n   * @param extensions Extension, or list of extensions to be recognized as downloads.\n   */\n  setDownloadExtensions(extensions: string | string[]): void {\n    this.setFunction('setDownloadClasses', extensions);\n  }\n\n  /**\n   * Sets additional file extensions to be recognized as downloads.<br />\n   * Example: `'docx'` or `['docx', 'xlsx']`.\n   *\n   * @param extensions Extension, or list of extensions to be recognized as downloads.\n   */\n  addDownloadExtensions(extensions: string | string[]): void {\n    this.setFunction('setDownloadClasses', extensions);\n  }\n\n  /**\n   * Specifies file extensions to be removed from the list of download file extensions.<br />\n   * Example: `'docx'` or `['docx', 'xlsx']`.\n   *\n   * @param extensions Extension, or list of extensions not to be recognized as downloads.\n   */\n  removeDownloadExtensions(extensions: string | string[]): void {\n    this.setFunction('setDownloadClasses', extensions);\n  }\n\n  /**\n   * Sets classes to be ignored if present in link (in addition to piwik_ignore).\n   *\n   * @param classes Class, or list of classes to be ignored if present in link.\n   */\n  setIgnoreClasses(classes: string | string[]): void {\n    this.setFunction('setDownloadClasses', classes);\n  }\n\n  /**\n   * Sets classes to be treated as outlinks (in addition to piwik_link).\n   *\n   * @param classes Class, or list of classes to be treated as outlinks.\n   */\n  setLinkClasses(classes: string | string[]): void {\n    this.setFunction('setDownloadClasses', classes);\n  }\n\n  /**\n   * Sets delay for link tracking (in milliseconds).\n   *\n   * @param delay Delay, in milliseconds, for link tracking.\n   */\n  setLinkTrackingTimer(delay: number): void {\n    this.setFunction('setLinkTrackingTimer', delay);\n  }\n\n  /**\n   * Returns delay for link tracking.\n   *\n   * @returns Promise object representing the delay in milliseconds.\n   */\n  getLinkTrackingTimer(): Promise<number> {\n    return this.getFunction<number>('getLinkTrackingTimer');\n  }\n\n  /**\n   * Sets if or not to record the hash tag (anchor) portion of URLs.\n   *\n   * @param value If true, the hash tag portion of the URLs won't be recorded.\n   */\n  discardHashTag(value: boolean): void {\n    this.setFunction('discardHashTag', value);\n  }\n\n  /**\n   * By default Matomo uses the browser DOM Timing API to accurately determine the time it takes to generate and download\n   * the page. You may overwrite this value with this function.\n   * This API has been deprecated in Matomo 4.x.\n   *\n   * @param generationTime Time, in milliseconds, of the page generation.\n   * @deprecated since version 3.0.\n   * @see {@link setPagePerformanceTiming}\n   */\n  setGenerationTimeMs(generationTime: number): void {\n    this.setFunction('setGenerationTimeMs', generationTime);\n  }\n\n  /**\n   * Appends a custom string to the end of the HTTP request to matomo.php.\n   *\n   * @param appendToUrl String to append to the end of the HTTP request to piwik.php/matomo.php.\n   */\n  appendToTrackingUrl(appendToUrl: string): void {\n    this.setFunction('appendToTrackingUrl', appendToUrl);\n  }\n\n  /**\n   * Enables a frame-buster to prevent the tracked web page from being framed/iframed.\n   */\n  killFrame(): void {\n    this.setFunction('killFrame');\n  }\n\n  /**\n   * Forces the browser to load the live URL if the tracked web page is loaded from a local file\n   * (e.g., saved to someone's desktop).\n   *\n   * @param url URL to track instead of `file://` URLs.\n   */\n  redirectFile(url: string): void {\n    this.setFunction('redirectFile', url);\n  }\n\n  /**\n   * Returns the 16 characters ID for the visitor.\n   *\n   * @returns Promise object representing the 16 characters ID for the visitor.\n   */\n  getVisitorId(): Promise<string> {\n    return this.getFunction<string>('getVisitorId');\n  }\n\n  /**\n   * Sets the `visitorId`.<br />\n   * The visitorId won't be persisted in a cookie and needs to be set on every new page load.\n   *\n   *  @param visitorId needs to be a 16 digit hex string.\n   */\n  setVisitorId(visitorId: string) {\n    this.setFunction('setVisitorId', visitorId);\n  }\n\n  /**\n   * Returns the visitor cookie contents in an array.\n   *\n   * @returns Promise object representing the cookie contents in an array.\n   */\n  getVisitorInfo(): Promise<string[]> {\n    return this.getFunction<string[]>('getVisitorInfo');\n  }\n\n  /**\n   * Returns the visitor attribution array (Referer information and/or Campaign name & keyword).<br />\n   * Attribution information is used by Matomo to credit the correct referrer (first or last referrer)\n   * used when a user triggers a goal conversion.\n   *\n   * @returns Promise object representing the visitor attribution array (Referer information and/or Campaign name & keyword).\n   */\n  getAttributionInfo(): Promise<unknown[]> {\n    return this.getFunction<unknown[]>('getAttributionInfo');\n  }\n\n  /**\n   * Returns the attribution campaign name.\n   *\n   * @returns Promise object representing the attribution campaign name.\n   */\n  getAttributionCampaignName(): Promise<string> {\n    return this.getFunction<string>('getAttributionCampaignName');\n  }\n\n  /**\n   * Returns the attribution campaign keyword.\n   *\n   * @returns Promise object representing the attribution campaign keyword.\n   */\n  getAttributionCampaignKeyword(): Promise<string> {\n    return this.getFunction<string>('getAttributionCampaignKeyword');\n  }\n\n  /**\n   * Returns the attribution referrer timestamp.\n   *\n   * @returns Promise object representing the attribution referrer timestamp (as string).\n   */\n  getAttributionReferrerTimestamp(): Promise<string> {\n    return this.getFunction<string>('getAttributionReferrerTimestamp');\n  }\n\n  /**\n   * Returns the attribution referrer URL.\n   *\n   * @returns Promise object representing the attribution referrer URL\n   */\n  getAttributionReferrerUrl(): Promise<string> {\n    return this.getFunction<string>('getAttributionReferrerUrl');\n  }\n\n  /**\n   * Returns the User ID string if it was set.\n   *\n   * @returns Promise object representing the User ID for the visitor.\n   * @see {@link https://matomo.org/docs/user-id/|Matomo User ID}\n   */\n  getUserId(): Promise<string> {\n    return this.getFunction<string>('getUserId');\n  }\n\n  /**\n   * Sets a User ID to this user (such as an email address or a username).\n   *\n   * @param userId User ID to set for the current visitor.\n   * @see {@link https://matomo.org/docs/user-id/|Matomo User ID}\n   */\n  setUserId(userId: string): void {\n    this.setFunction('setUserId', userId);\n  }\n\n  /**\n   * Resets the User ID which also generates a new Visitor ID.\n   *\n   * @see {@link https://matomo.org/docs/user-id/|Matomo User ID}\n   */\n  resetUserId(): void {\n    this.setFunction('resetUserId');\n  }\n\n  /**\n   * Overrides PageView id for every use of logPageView().\n   * Do not use this if you call trackPageView() multiple times during tracking (e.g. when tracking a single page application)\n   *\n   * @param pageViewId PageView id to use.\n   */\n  setPageViewId(pageViewId: string): void {\n    this.setFunction('setPageViewId', pageViewId);\n  }\n\n  /**\n   * Returns the PageView id.\n   * If not set manually using setPageViewId, this method will return the dynamic PageView id, used in the last tracked page view,\n   * or undefined if no page view was tracked yet.\n   *\n   * @returns Promise object representing the PageView id.\n   */\n  getPageViewId(): Promise<string> {\n    return this.getFunction<string>('getPageViewId');\n  }\n\n  /**\n   * Sets a custom variable.\n   *\n   * @param index Index, the number from 1 to 5 where this custom variable name is stored for the current page view.\n   * @param name Name, the name of the variable, for example: Category, Sub-category, UserType.\n   * @param value Value, for example: \"Sports\", \"News\", \"World\", \"Business\"â€¦\n   * @param scope Scope of the custom variable:<br />\n   * - 'page' means the custom variable applies to the current page view.\n   * - 'visit' means the custom variable applies to the current visitor.\n   * - 'event' means the custom variable applies to the current event.\n   * @see {@link https://matomo.org/docs/custom-variables/|Custom Variables}\n   */\n  setCustomVariable(index: number, name: string, value: string, scope: MatomoScope): void {\n    this.setFunction('setCustomVariable', index, name, value, scope);\n  }\n\n  /**\n   * Deletes a custom variable.\n   *\n   * @param index Index of the custom variable to delete.\n   * @param scope Scope of the custom variable to delete.\n   * @see {@link https://matomo.org/docs/custom-variables/|Custom Variables}\n   */\n  deleteCustomVariable(index: number, scope: MatomoScope): void {\n    this.setFunction('deleteCustomVariable', index, scope);\n  }\n\n  /**\n   * Deletes all custom variables.\n   *\n   * @param scope Scope of the custom variables to delete.\n   * @see {@link https://matomo.org/docs/custom-variables/|Custom Variables}\n   */\n  deleteCustomVariables(scope: MatomoScope): void {\n    this.setFunction('deleteCustomVariables', scope);\n  }\n\n  /**\n   * Retrieves a custom variable.\n   *\n   * @param index Index of the custom variable to retrieve.\n   * @param scope Scope of the custom variable to retrieve.\n   * @returns Promise object representing the value of custom variable.\n   * @see {@link https://matomo.org/docs/custom-variables/|Custom Variables}\n   */\n  getCustomVariable(index: number, scope: MatomoScope): Promise<string> {\n    return this.getFunction<string>('getCustomVariable', index, scope);\n  }\n\n  /**\n   * When called then the Custom Variables of scope 'visit' will be stored (persisted) in a first party cookie\n   * for the duration of the visit.<br />\n   * This is useful if you want to call `getCustomVariable` later in the visit.<br />\n   * (by default custom variables are not stored on the visitor's computer.)\n   *\n   * @see {@link https://matomo.org/docs/custom-variables/|Custom Variables}\n   */\n  storeCustomVariablesInCookie(): void {\n    this.setFunction('storeCustomVariablesInCookie');\n  }\n\n  /**\n   * Sets a custom dimension.<br />\n   * (requires Custom Dimensions plugin)\n   *\n   * @param customDimensionId ID of the custom dimension to set.\n   * @param customDimensionValue Value to be set.\n   * @see {@link https://plugins.piwik.org/CustomDimensions|Custom Dimensions}\n   */\n  setCustomDimension(customDimensionId: number, customDimensionValue: string): void {\n    this.setFunction('setCustomDimension', customDimensionId, customDimensionValue);\n  }\n\n  /**\n   * Deletes a custom dimension.<br />\n   * (requires Custom Dimensions plugin)\n   *\n   * @param customDimensionId ID of the custom dimension to delete.\n   * @see {@link https://plugins.piwik.org/CustomDimensions|Custom Dimensions}\n   */\n  deleteCustomDimension(customDimensionId: number): void {\n    this.setFunction('deleteCustomDimension', customDimensionId);\n  }\n\n  /**\n   * Retrieve a custom dimension.<br />\n   * (requires Custom Dimensions plugin)\n   *\n   * @param customDimensionId ID of the custom dimension to retrieve.\n   * @returns Promise object representing the value for the requested custom dimension.\n   * @see {@link https://plugins.piwik.org/CustomDimensions|Custom Dimensions}\n   */\n  getCustomDimension(customDimensionId: number): Promise<string> {\n    return this.getFunction<string>('getCustomDimension', customDimensionId);\n  }\n\n  /**\n   * Sets campaign name parameter(s).\n   *\n   * @param name Name of the campaign\n   * @see {@link https://matomo.org/docs/tracking-campaigns/|Campaigns}\n   */\n  setCampaignNameKey(name: string): void {\n    this.setFunction('setCampaignNameKey', name);\n  }\n\n  /**\n   * Sets campaign keyword parameter(s).\n   *\n   * @param keyword Keyword parameter(s) of the campaign.\n   * @see {@link https://matomo.org/docs/tracking-campaigns/|Campaigns}\n   */\n  setCampaignKeywordKey(keyword: string): void {\n    this.setFunction('setCampaignKeywordKey', keyword);\n  }\n\n  /**\n   * Sets if or not to attribute a conversion to the first referrer.<br />\n   * By default, conversion is attributed to the most recent referrer.\n   *\n   * @param conversionToFirstReferrer If true, Matomo will attribute the Goal conversion to the first referrer used\n   * instead of the last one.\n   * @see {@link https://matomo.org/docs/tracking-campaigns/|Campaigns}\n   * @see {@link https://matomo.org/faq/general/faq_106/#faq_106|Conversions to the first referrer}\n   */\n  setConversionAttributionFirstReferrer(conversionToFirstReferrer: boolean): void {\n    this.setFunction('setConversionAttributionFirstReferrer', conversionToFirstReferrer);\n  }\n\n  /**\n   * Sets the current page view as a product or category page view.<br />\n   * When you call setEcommerceView, it must be followed by a call to trackPageView to record the product or category page view.\n   *\n   * @param productSKU SKU of the viewed product.\n   * @param productName Name of the viewed product.\n   * @param productCategory Category of the viewed product.\n   * @param price Price of the viewed product.\n   */\n  setEcommerceView(\n    productSKU: string,\n    productName: string,\n    productCategory: string,\n    price: number,\n  ): void {\n    this.setFunction('setEcommerceView', productSKU, productName, productCategory, price);\n  }\n\n  /**\n   * Adds a product into the eCommerce order.<br />\n   * Must be called for each product in the order.\n   *\n   * @param productSKU SKU of the product to add.\n   * @param [productName] Optional name of the product to add.\n   * @param [productCategory] Optional category of the product to add.\n   * @param [price] Optional price of the product to add.\n   * @param [quantity] Optional quantity of the product to add.\n   */\n  addEcommerceItem(\n    productSKU: string,\n    productName?: string,\n    productCategory?: string,\n    price?: number,\n    quantity?: number,\n  ): void {\n    const args: unknown[] = [productSKU];\n    if (productName) {\n      args.push(productName);\n      if (productCategory) {\n        args.push(productCategory);\n        if (typeof price === 'number') {\n          args.push(price);\n          if (typeof quantity === 'number') {\n            args.push(quantity);\n          }\n        }\n      }\n    }\n    this.setFunction('addEcommerceItem', ...args);\n  }\n\n  /**\n   * Removes the specified product from the untracked ecommerce order.\n   *\n   * @param productSKU SKU of the product to remove.\n   */\n  removeEcommerceItem(productSKU: string): void {\n    this.setFunction('removeEcommerceItem', productSKU);\n  }\n\n  /**\n   * Removes all products in the untracked ecommerce order.<br />\n   * Note: this is done automatically after `trackEcommerceOrder()` is called.\n   */\n  clearEcommerceCart(): void {\n    this.setFunction('clearEcommerceCart');\n  }\n\n  /**\n   * Returns all ecommerce items currently in the untracked ecommerce order.\n   * The returned array will be a copy, so changing it won't affect the ecommerce order.<br />\n   * To affect what gets tracked, use the `addEcommerceItem()`/`removeEcommerceItem()`/`clearEcommerceCart()` methods.<br />\n   * Use this method to see what will be tracked before you track an order or cart update.\n   *\n   * @returns Promise object representing the list of items in the current untracked order.\n   */\n  getEcommerceItems(): Promise<\n    {\n      productSKU: string;\n      productName?: string;\n      productCategory?: string;\n      price?: number;\n      quantity?: number;\n    }[]\n  > {\n    return this.getFunction<\n      {\n        productSKU: string;\n        productName?: string;\n        productCategory?: string;\n        price?: number;\n        quantity?: number;\n      }[]\n    >('getEcommerceItems');\n  }\n\n  /**\n   * Tracks a shopping cart.<br />\n   * Call this function every time a user is adding, updating or deleting a product from the cart.\n   *\n   * @param grandTotal Grand total of the shopping cart.\n   */\n  trackEcommerceCartUpdate(grandTotal: number): void {\n    this.setFunction('trackEcommerceCartUpdate', grandTotal);\n  }\n\n  /**\n   * Tracks an Ecommerce order, including any eCommerce item previously added to the order.<br />\n   * orderId and grandTotal (ie.revenue) are required parameters.\n   *\n   * @param orderId ID of the tracked order.\n   * @param grandTotal Grand total of the tracked order.\n   * @param [subTotal] Sub total of the tracked order.\n   * @param [tax] Taxes for the tracked order.\n   * @param [shipping] Shipping fees for the tracked order.\n   * @param [discount] Discount granted for the tracked order.\n   */\n  trackEcommerceOrder(\n    orderId: string,\n    grandTotal: number,\n    subTotal?: number,\n    tax?: number,\n    shipping?: number,\n    discount?: number | boolean,\n  ): void {\n    const args: unknown[] = [orderId, grandTotal];\n    if (typeof subTotal === 'number') {\n      args.push(subTotal);\n      if (typeof tax === 'number') {\n        args.push(tax);\n        if (typeof shipping === 'number') {\n          args.push(shipping);\n          if (typeof discount === 'number' || typeof discount === 'boolean') {\n            args.push(discount);\n          }\n        }\n      }\n    }\n    this.setFunction('trackEcommerceOrder', ...args);\n  }\n\n  /**\n   * Returns true or false depending on whether requireConsent was called previously.\n   *\n   * @returns Promise object representing the current status for consent requirement.\n   */\n  isConsentRequired(): Promise<boolean> {\n    return this.getFunction<boolean>('isConsentRequired');\n  }\n\n  /**\n   * By default the Matomo tracker assumes consent to tracking.\n   * To change this behavior so nothing is tracked until a user consents, you must call `requireConsent`.\n   */\n  requireConsent(): void {\n    this.setFunction('requireConsent');\n  }\n\n  /**\n   * Require user cookie consent before storing and using any cookies.\n   */\n  requireCookieConsent(): void {\n    this.setFunction('requireCookieConsent');\n  }\n\n  /**\n   * Marks that the current user has consented.<br />\n   * The consent is one-time only, so in a subsequent browser session, the user will have to consent again.<br />\n   * To remember consent, see the method below: `rememberConsentGiven`.\n   *\n   * @see {@link rememberConsentGiven}\n   */\n  setConsentGiven(): void {\n    this.setFunction('setConsentGiven');\n  }\n\n  /**\n   * Marks that the current user has consented to store and use cookies.<br />\n   * The consent is one-time only, so in a subsequent browser session, the user will have to consent again.<br />\n   * To remember consent, see the method below: `rememberCookieConsentGiven`.\n   */\n  setCookieConsentGiven(): void {\n    this.setFunction('setCookieConsentGiven');\n  }\n\n  /**\n   * Marks that the current user has consented, and remembers this consent through a browser cookie.<br />\n   * The next time the user visits the site, Matomo will remember that they consented, and track them.<br />\n   * If you call this method, you do not need to call `setConsentGiven`.\n   *\n   * @param hoursToExpire Expiry period for your user consent.\n   */\n  rememberConsentGiven(hoursToExpire?: number): void {\n    const args: number[] = [];\n    if (typeof hoursToExpire === 'number') {\n      args.push(hoursToExpire);\n    }\n    this.setFunction('rememberConsentGiven', ...args);\n  }\n\n  /**\n   * Marks that the current user has consented, and remembers this consent through a browser cookie.<br />\n   * The next time the user visits the site, Matomo will remember that they consented, and track them.<br />\n   * If you call this method, you do not need to call `setCookieConsentGiven`.\n   *\n   * @param hoursToExpire Expiry period for your user consent.\n   */\n  rememberCookieConsentGiven(hoursToExpire?: number): void {\n    const args: number[] = [];\n    if (typeof hoursToExpire === 'number') {\n      args.push(hoursToExpire);\n    }\n    this.setFunction('rememberCookieConsentGiven', ...args);\n  }\n\n  /**\n   * Removes a user's consent, both if the consent was one-time only and if the consent was remembered.<br />\n   * This makes sure the cookie that remembered the given consent is deleted.<br />\n   * After calling this method, the user will have to consent again in order to be tracked.\n   */\n  forgetConsentGiven(): void {\n    this.setFunction('forgetConsentGiven');\n  }\n\n  /**\n   * Removes a user's consent, both if the consent was one-time only and if the consent was remembered.<br />\n   * This makes sure the cookie that remembered the given consent is deleted.<br />\n   * After calling this method, the user will have to consent again in order to be tracked.\n   */\n  forgetCookieConsentGiven(): void {\n    this.setFunction('forgetCookieConsentGiven');\n  }\n\n  /**\n   * Returns true or false depending on whether the current visitor has given consent previously or not.\n   *\n   * @returns Promise object representing whether consent has been remembered or not.\n   */\n  hasRememberedConsent() {\n    return this.getFunction<boolean>('hasRememberedConsent');\n  }\n\n  /**\n   * If consent was given, returns the timestamp when the visitor gave consent.<br />\n   * Only works if `rememberConsentGiven` was used and not when `setConsentGiven` was used.\n   * The timestamp is the local timestamp which depends on the visitors time.\n   *\n   * @return Promise object representing the timestamp when consent was remembered.\n   */\n  getRememberedConsent() {\n    return this.getFunction<string>('getRememberedConsent');\n  }\n\n  /**\n   * If cookie consent was given, returns the timestamp when the visitor gave consent.<br />\n   * Only works if `rememberCookieConsentGiven` was used and not when `setCookieConsentGiven` was used.\n   * The timestamp is the local timestamp which depends on the visitors time.\n   */\n  getRememberedCookieConsent() {\n    return this.getFunction<string>('getRememberedCookieConsent');\n  }\n\n  /**\n   * Sets if to not to track users who opt out of tracking using Mozilla's (proposed) Do Not Track setting.\n   *\n   * @param doNotTrack If true, users who opted for Do Not Track in their settings won't be tracked.\n   * @see {@link https://www.w3.org/TR/tracking-dnt/}\n   */\n  setDoNotTrack(doNotTrack: boolean): void {\n    this.setFunction('setDoNotTrack', doNotTrack);\n  }\n\n  /**\n   * After calling this function, the user will be opted out and no longer be tracked.\n   */\n  optUserOut() {\n    this.setFunction('optUserOut');\n  }\n\n  /**\n   * After calling this method the user will be tracked again. Call this method if the user opted out before.\n   */\n  forgetUserOptOut() {\n    this.setFunction('forgetUserOptOut');\n  }\n\n  /**\n   * Returns true or false depending on whether the user is opted out or not.<br />\n   * Note: This method might not return the correct value if you are using the opt out iframe.\n   *\n   * @returns Promise object representing whether the user is opted out or not.\n   */\n  isUserOptedOut() {\n    return this.getFunction<boolean>('isUserOptedOut');\n  }\n\n  /**\n   * Disables all first party cookies.<br />\n   * Existing Matomo cookies for this websites will be deleted on the next page view.\n   */\n  disableCookies(): void {\n    this.setFunction('disableCookies');\n  }\n\n  /**\n   * Deletes the tracking cookies currently set (useful when creating new visits).\n   */\n  deleteCookies(): void {\n    this.setFunction('deleteCookies');\n  }\n\n  /**\n   * Returns whether cookies are enabled and supported by this browser.\n   *\n   * @returns Promise object representing the support and activation of cookies.\n   */\n  hasCookies(): Promise<boolean> {\n    return this.getFunction<boolean>('hasCookies');\n  }\n\n  /**\n   * Returns true or false depending on whether cookies are currently enabled or disabled.\n   *\n   * @returns Promise object representing whether cookies are enabled or not.\n   */\n  areCookiesEnabled() {\n    return this.getFunction<boolean>('areCookiesEnabled');\n  }\n\n  /**\n   * Sets the tracking cookie name prefix.<br />\n   * Default prefix is 'pk'.\n   *\n   * @param prefix Prefix for the tracking cookie names.\n   */\n  setCookieNamePrefix(prefix: string): void {\n    this.setFunction('setCookieNamePrefix', prefix);\n  }\n\n  /**\n   * Sets the domain of the tracking cookies.<br />\n   * Default is the document domain.<br />\n   * If your website can be visited at both www.example.com and example.com, you would use: `'.example.com'` or `'*.example.com'`.\n   *\n   * @param domain Domain of the tracking cookies.\n   */\n  setCookieDomain(domain: string): void {\n    this.setFunction('setCookieDomain', domain);\n  }\n\n  /**\n   * Sets the path of the tracking cookies.<br />\n   * Default is '/'.\n   *\n   * @param path Path of the tracking cookies.\n   */\n  setCookiePath(path: string): void {\n    this.setFunction('setCookiePath', path);\n  }\n\n  /**\n   * Sets if or not to enable the Secure cookie flag on all first party cookies.<br />\n   * This should be used when your website is only available under HTTPS so that all tracking cookies are always sent\n   * over secure connection.\n   *\n   * @param secure If true, the secure cookie flag will be set on all first party cookies.\n   */\n  setSecureCookie(secure: boolean): void {\n    this.setFunction('setSecureCookie', secure);\n  }\n\n  /**\n   * defaults to `Lax`. Can be set to `None` or `Strict`.<br />\n   * `None` requires all traffic to be on HTTPS and will also automatically set the secure cookie.\n   * It can be useful for example if the tracked website is an iframe.<br />\n   * `Strict` only works if your Matomo and the website runs on the very same domain.\n   *\n   * @param policy Either `Lax`, `Strict` or `None`\n   * */\n  setCookieSameSite(policy: 'Lax' | 'Strict' | 'None') {\n    this.setFunction('setCookieSameSite', policy);\n  }\n\n  /**\n   * Sets the visitor cookie timeout.<br />\n   * Default is 13 months.\n   *\n   * @param timeout Timeout, in seconds, for the visitor cookie timeout.\n   */\n  setVisitorCookieTimeout(timeout: number): void {\n    this.setFunction('setVisitorCookieTimeout', timeout);\n  }\n\n  /**\n   * Sets the referral cookie timeout.<br />\n   * Default is 6 months.\n   *\n   * @param timeout Timeout, in seconds, for the referral cookie timeout.\n   */\n  setReferralCookieTimeout(timeout: number): void {\n    this.setFunction('setReferralCookieTimeout', timeout);\n  }\n\n  /**\n   * Sets the session cookie timeout.<br />\n   * Default is 30 minutes.\n   *\n   * @param timeout Timeout, in seconds, for the session cookie timeout.\n   */\n  setSessionCookieTimeout(timeout: number): void {\n    this.setFunction('setSessionCookieTimeout', timeout);\n  }\n\n  /**\n   * Adds a click listener to a specific link element.<br />\n   * When clicked, Matomo will log the click automatically.\n   *\n   * @param element Element on which to add a click listener.\n   */\n  addListener(element: Element): void {\n    this.setFunction('addListener', element);\n  }\n\n  /**\n   * Sets the request method to either `GET` or `POST`. (The default is `GET`.)<br />\n   * To use the `POST` request method, either:<br />\n   * 1) the Matomo host is the same as the tracked website host (Matomo installed in the same domain as your tracked website), or<br />\n   * 2) if Matomo is not installed on the same host as your website, you need to enable CORS (Cross domain requests).<br />\n   * Keep in mind that when Matomo uses sendBeacon() for sending tracking requests (which is enabled by default) it will send data via `POST`.\n   * If you want Matomo to never send `POST` requests, you can use this method to force `GET` which will automatically disable `sendBeacon`.\n   *\n   * @param method HTTP method for sending information to the Matomo server.\n   * @see {@link https://matomo.org/faq/how-to/faq_18694/|enable CORS (Cross domain requests)}\n   */\n  setRequestMethod(method: 'GET' | 'PST'): void {\n    this.setFunction('setRequestMethod', method);\n  }\n\n  /**\n   * Enables the use of `navigator.sendBeacon()`\n   * Why would I use this feature? When enabling this feature, likely more of your clicks on downloads/outlinks will be tracked\n   * and reported in Matomo (more accuracy). Also it will reduce the link tracking time to a minimum of 100ms instead of\n   * the default 500ms (default which can be increased), so that when they click on an outlink then the navigation to this\n   * clicked page will happen 400ms faster (faster and better user experience).\n   * Send beacon will only be used if the browser actually supports it.<br />\n   * Some ad blockers or other browser extensions may block the `sendBeacon` feature which could again cause limited data\n   * loss in these cases.<br />\n   * Note: use of `sendBeacon` has been be enabled by default since Matomo 4.\n   */\n  enableAlwaysUseSendBeacon(): void {\n    this.setFunction('alwaysUseSendBeacon');\n  }\n\n  /**\n   * Disables sending tracking tracking requests using `navigator.sendBeacon` which is enabled by default.\n   */\n  disableAlwaysUseSendBeacon() {\n    this.setFunction('disableAlwaysUseSendBeacon');\n  }\n\n  /**\n   * Sets a function that will process the request content.<br />\n   * The function will be called once the request (query parameters string) has been prepared, and before the request content is sent.\n   *\n   * @param callback Function that will process the request content.\n   */\n  setCustomRequestProcessing(callback: (queryParameters: string) => void): void {\n    this.invokeFunction('setCustomRequestProcessing', callback);\n  }\n\n  /**\n   * Sets request Content-Type header value.<br />\n   * Applicable when `POST` request method is used via setRequestMethod.\n   *\n   * @param contentType Value for Content-Type HTTP header.\n   */\n  setRequestContentType(contentType: string): void {\n    this.setFunction('setRequestContentType', contentType);\n  }\n\n  /**\n   * Disables the feature which groups together multiple tracking requests and send them as a bulk `POST` request.<br />\n   * Disabling this feature is useful when you want to be able to replay all logs: one must use `disableQueueRequest`\n   * to disable this behavior to later be able to replay logged Matomo logs (otherwise a subset of the requests\n   * wouldn't be able to be replayed).\n   */\n  disableQueueRequest(): void {\n    this.setFunction('disableQueueRequest');\n  }\n\n  /**\n   * Defines after how many milliseconds a queued requests will be executed after the request was queued initially.\n   * The higher the value the more tracking requests can be sent together at once. interval has to be at least 1000 (1000ms = 1s)\n   * and defaults to 2.5 seconds.\n   */\n  setRequestQueueInterval(interval: number) {\n    this.setFunction('setRequestQueueInterval', interval);\n  }\n\n  /**\n   * Manually set performance metrics in milliseconds in a Single Page App or when Matomo cannot detect some metrics.\n   * You can set parameters to undefined if you do not want to track this metric. At least one parameter needs to be set.\n   * The set performance timings will be tracked only on the next page view. If you track another page view then you will need to set\n   * the performance timings again.<br />\n   * Requires Matomo 4.5 or newer.\n   *\n   * @param [networkTimeInMs] d\n   * @param [serverTimeInMs] d\n   * @param [transferTimeInMs] d\n   * @param [domProcessingTimeInMs] d\n   * @param [domCompletionTimeInMs] d\n   * @param [onloadTimeInMs] d\n   */\n  setPagePerformanceTiming(\n    networkTimeInMs: number | undefined,\n    serverTimeInMs: number | undefined,\n    transferTimeInMs: number | undefined,\n    domProcessingTimeInMs: number | undefined,\n    domCompletionTimeInMs: number | undefined,\n    onloadTimeInMs: number | undefined,\n  ): void {\n    this.setFunction(\n      'setPagePerformanceTiming',\n      networkTimeInMs,\n      serverTimeInMs,\n      transferTimeInMs,\n      domProcessingTimeInMs,\n      domCompletionTimeInMs,\n      onloadTimeInMs,\n    );\n  }\n\n  /**\n   * Enables tracking of JavaScript errors.\n   * Once you enable JS error tracking, JS errors will be tracked as Events and appear in the Behavior > Events report.<br />\n   * Events will have the following details:<br />\n   * - Event category = JavaScript Errors\n   * - Event action = the URL of the page where the error occurred, with the line number appended (and the character column number)\n   * - Event name = the error message as it appears in your visitorsâ€™ browserâ€™s console (developer tools)\n   */\n  enableJSErrorTracking(): void {\n    this.setFunction('enableJSErrorTracking');\n  }\n}\n","import { MatomoTrackers } from './matomo-configuration';\n\nexport function injectMatomoTrackingScriptFactory(document: Document, debugTracing = false) {\n  return (configuration: MatomoTrackers) => {\n    if (!configuration.scriptUrl || !configuration.trackers?.length) return;\n    try {\n      if (debugTracing)\n        console.debug(\n          '\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸ’‰ Inject Matomo.js script in DOM for',\n          configuration,\n        );\n      const [mainTracker, ...otherTrackers] = configuration.trackers;\n      window['_paq'].push(['setTrackerUrl', mainTracker.trackerUrl]);\n      window['_paq'].push(['setSiteId', mainTracker.siteId.toString()]);\n      otherTrackers.forEach((tracker) =>\n        window['_paq'].push(['addTracker', tracker.trackerUrl, tracker.siteId.toString()]),\n      );\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = configuration.scriptUrl!;\n      const firstScript = document.getElementsByTagName('script')[0];\n      firstScript.parentNode?.insertBefore(script, firstScript);\n    } catch (e) {\n      if (!(e instanceof ReferenceError)) throw e;\n    }\n  };\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Injectable, OnDestroy, inject } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationEnd, NavigationStart, Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { filter, map, pairwise } from 'rxjs/operators';\n\nimport {\n  MATOMO_DEBUG_TRACING,\n  MATOMO_ROUTE_TRACKING_INTERNAL_CONFIGURATION,\n} from './matomo-configuration';\nimport { MatomoTracker } from './matomo-tracker.service';\n\nconst DefaultIdRegExp = new RegExp(\n  [\n    '\\\\d{8,}', // Numerical\n    '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}', // UUID / GUID\n    '[a-f\\\\d]{24}', // MongodDb Id\n    '[0-7][0-9A-HJKMNP-TV-Z]{25}', // ULID\n    'c[a-z0-9]{24}', // CUID\n    '[A-Za-z0-9_-]{21}', // NanoID\n  ].join('|'),\n  'g',\n);\n\n/**\n * Service for tracking route changes.\n *\n * @export\n */\n@Injectable({ providedIn: 'root' })\nexport class MatomoRouteTracker implements OnDestroy {\n  private previousRouteKey: string | null = null;\n  private readonly routeTrackingConfiguration = inject(\n    MATOMO_ROUTE_TRACKING_INTERNAL_CONFIGURATION,\n  );\n  private readonly debugTracing = inject(MATOMO_DEBUG_TRACING);\n  private readonly matomoTracker = inject(MatomoTracker);\n  private readonly router = inject(Router);\n  private readonly activatedRoute = inject(ActivatedRoute);\n  private readonly titleService = inject(Title);\n  private readonly document = inject(DOCUMENT);\n  private subscription?: Subscription;\n\n  /**\n   * Starts tracking route changes.\n   * Matomo DocumentTitle will be set with the `title` or `data.matomo.title` of your routes.\n   *\n   * This service shall not be used directly within an application.\n   */\n  startTracking(): void {\n    if (this.debugTracing)\n      console.debug('\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸš¨ Start tracking route changesâ€¦');\n    this.subscription = this.router.events\n      .pipe(\n        filter(\n          (event: unknown): event is NavigationStart | NavigationEnd =>\n            event instanceof NavigationStart || event instanceof NavigationEnd,\n        ),\n        map((event) => ({\n          timestamp: new Date().getTime(),\n          event,\n        })),\n        pairwise(),\n        filter(([a, b]) => a.event instanceof NavigationStart && b.event instanceof NavigationEnd),\n      )\n      .subscribe({\n        next: ([start, end]) => {\n          if (this.debugTracing)\n            console.groupCollapsed('\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸš§ New Route change occurrence');\n          if (this.debugTracing)\n            console.debug('\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸ”Ž Found NavigationStart event', start.event);\n          if (this.debugTracing)\n            console.debug('\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸ”Ž Found NavigationEnd event', end.event);\n          const locationUrl = new URL(this.document.location.href);\n\n          // Check that the significant part of the location has changed before tracking anything\n          const currentRouteKey = this.routeTrackingConfiguration.clearMatrixParams\n            ? locationUrl.href.replace(/;[\\w,%]+=[\\w,%]+/g, '')\n            : locationUrl.href + this.routeTrackingConfiguration.clearQueryParams\n              ? ''\n              : locationUrl.search + this.routeTrackingConfiguration.clearHash\n                ? ''\n                : locationUrl.hash;\n          if (currentRouteKey === this.previousRouteKey) {\n            return;\n          }\n          this.previousRouteKey = currentRouteKey;\n\n          if (this.debugTracing)\n            console.debug('\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸ”Ž Activated route', this.activatedRoute);\n          let currentRoute = this.activatedRoute.snapshot.root;\n          while (currentRoute.firstChild) {\n            // if (this.debugTracing)\n            //   console.debug('\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸ”Ž Candidate route snapshot', currentRoute);\n            currentRoute = currentRoute.firstChild;\n          }\n          if (this.debugTracing)\n            console.debug('\\x1B[1mngx-Matomo\\x1B[m â€¢ ðŸ”Ž Current route snapshot', currentRoute);\n\n          // Check that the route is not marked as not to be tracked\n          if (currentRoute.data['matomo']?.tracking === 'OFF') return;\n\n          // Set referrer if appropriate\n          if (start.event.id === 1) this.matomoTracker.setReferrerUrl(this.document.referrer);\n\n          // Set custom URL for tracking\n          const customUrl =\n            (this.routeTrackingConfiguration.clearMatrixParams\n              ? locationUrl.href.replace(/;[\\w,%]+=[\\w,%]+/g, '')\n              : locationUrl.href) +\n            (this.routeTrackingConfiguration.clearQueryParams ? '' : locationUrl.search) +\n            (this.routeTrackingConfiguration.clearHash ? '' : locationUrl.hash);\n          this.matomoTracker.setCustomUrl(\n            this.routeTrackingConfiguration.clearIds\n              ? customUrl.replace(\n                  currentRoute.data['matomo']?.idRegExp instanceof RegExp\n                    ? currentRoute.data['matomo']?.idRegExp\n                    : this.routeTrackingConfiguration?.idRegExp instanceof RegExp\n                      ? this.routeTrackingConfiguration?.idRegExp\n                      : DefaultIdRegExp,\n                  this.routeTrackingConfiguration.idReplacement!,\n                )\n              : customUrl,\n          );\n\n          // Remove all previously assigned custom variables\n          this.matomoTracker.deleteCustomVariables('page');\n\n          // Track page performance timing\n          // TODO: Improve performance tracking\n          this.matomoTracker.setPagePerformanceTiming(\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            end.timestamp - start.timestamp,\n            undefined,\n          );\n\n          // Track page view\n\n          if (currentRoute.data['matomo']?.title)\n            this.matomoTracker.trackPageView(currentRoute.data['matomo']?.title);\n          else this.matomoTracker.trackPageView();\n\n          if (this.routeTrackingConfiguration.linkTracking !== 'NONE')\n            this.matomoTracker.enableLinkTracking(\n              this.routeTrackingConfiguration.linkTracking === 'LEFT_CLICK_ONLY' ? false : true,\n            );\n\n          if (this.debugTracing) console.groupEnd();\n        },\n      });\n  }\n\n  /**\n   * Stops tracking route changes.\n   */\n  stopTracking(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n\n  /**\n   * Angular OnDestroy lifecycle hook.\n   */\n  ngOnDestroy(): void {\n    this.stopTracking();\n  }\n}\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { ENVIRONMENT_INITIALIZER, PLATFORM_ID, Provider } from '@angular/core';\n\nimport {\n  MATOMO_DEBUG_TRACING,\n  MATOMO_ROUTE_TRACKING_INTERNAL_CONFIGURATION,\n  MATOMO_TRACKERS_INTERNAL_CONFIGURATION,\n  MATOMO_TRACKING_INTERNAL_CONFIGURATION,\n  MatomoRouteTrackingConfiguration,\n  MatomoTrackers,\n  MatomoTrackingConfiguration,\n  defaultRouteTrackingConfiguration,\n  defaultTrackers,\n  defaultTrackingConfiguration,\n} from './matomo-configuration';\nimport { MatomoFeature } from './matomo-features';\nimport {\n  MATOMO_TRACKER_GET_FUNCTION,\n  MATOMO_TRACKER_INVOKE_FUNCTION,\n  MATOMO_TRACKER_SET_FUNCTION,\n  getFunctionFactory,\n  invokeFunctionFactory,\n  setFunctionFactory,\n} from './matomo-functions';\nimport { injectMatomoTrackingScriptFactory } from './matomo-inject-tracking-script';\nimport { MatomoRouteTracker } from './matomo-route-tracker.service';\nimport { MatomoTracker } from './matomo-tracker.service';\n\ndeclare global {\n  /**\n   * Extend Window interface in order to introduce the Matomo _paq attribute\n   */\n  // eslint-disable-next-line @typescript-eslint/consistent-type-definitions\n  interface Window {\n    _paq: { push: (args: unknown[]) => void };\n  }\n}\n\n/**\n * Prepares Matomo tracking by returning a list of providers.\n *\n * @param {...*} features List of features to include in order to provide the correct list of providers.\n * @returns providers required for Matomo tracking.\n */\nexport function provideMatomoTracking(...features: MatomoFeature[]) {\n  if (\n    features.filter((it) =>\n      ['TRACKER_INJECTION', 'EXTERNAL_TRACKER', 'DUMMY_TRACKER'].includes(it.kind),\n    ).length > 1\n  ) {\n    console.error('One and one only tracker configuration must be used.');\n    return [];\n  }\n\n  try {\n    window['_paq'] =\n      window['_paq'] ||\n      (features.find((it) => it.kind === 'TRACKER_INJECTION') ||\n      features.find((it) => it.kind === 'EXTERNAL_TRACKER')\n        ? []\n        : // eslint-disable-next-line @typescript-eslint/no-empty-function\n          { push: () => {} });\n  } catch (e) {\n    if (!(e instanceof ReferenceError)) throw e;\n  }\n\n  const providers: Provider[] = [MatomoTracker];\n\n  const debugTracingFeature = features.find((it) => it.kind === 'DEBUG_TRACING');\n  providers.push({\n    provide: MATOMO_DEBUG_TRACING,\n    useValue: !!debugTracingFeature,\n  });\n\n  const routeTrackingFeature = features.find((it) => it.kind === 'ROUTE_TRACKING') as\n    | {\n        kind: 'ROUTE_TRACKING';\n        parameters: Partial<MatomoRouteTrackingConfiguration>;\n      }\n    | undefined;\n  if (routeTrackingFeature) {\n    providers.push(\n      {\n        provide: ENVIRONMENT_INITIALIZER,\n        useFactory: (matomoRouteTracker: MatomoRouteTracker) => () => {\n          matomoRouteTracker.startTracking();\n        },\n        deps: [MatomoRouteTracker],\n        multi: true,\n      },\n      {\n        provide: MATOMO_ROUTE_TRACKING_INTERNAL_CONFIGURATION,\n        useValue: {\n          ...defaultRouteTrackingConfiguration,\n          ...routeTrackingFeature?.parameters,\n        },\n      },\n    );\n  }\n\n  const trackingConfigurationFeature = features.find(\n    (it) => it.kind === 'TRACKING_CONFIGURATION',\n  ) as\n    | {\n        kind: 'TRACKING_CONFIGURATION';\n        parameters: Partial<MatomoTrackingConfiguration>;\n      }\n    | undefined;\n  if (trackingConfigurationFeature) {\n    providers.push(\n      {\n        provide: ENVIRONMENT_INITIALIZER,\n        useFactory: (matomoTracker: MatomoTracker) => () => {\n          // Disable use of sendBeacon for transmitting tracked events\n          if (trackingConfigurationFeature.parameters.doNotUserSendBeacon)\n            matomoTracker.disableAlwaysUseSendBeacon();\n\n          // Disable cookies if specified\n          if (trackingConfigurationFeature.parameters.disableCookies)\n            matomoTracker.disableCookies();\n\n          // Disable cross domain linking if specified\n          // TODO: investigate how this is done with GTM parameters.\n          // if (trackingConfigurationFeature.parameters.disableCrossDomainLinking)\n          //   matomoTracker.disableCrossDomainLinking();\n\n          // Set cookie domain if specified\n          if (trackingConfigurationFeature.parameters.cookieDomain)\n            matomoTracker.setCookieDomain(trackingConfigurationFeature.parameters.cookieDomain);\n\n          // Set cookie path if specified\n          if (trackingConfigurationFeature.parameters.cookiePath)\n            matomoTracker.setCookiePath(trackingConfigurationFeature.parameters.cookiePath);\n\n          // Set cookie same site if specified\n          if (trackingConfigurationFeature.parameters.cookieSameSite)\n            matomoTracker.setCookieSameSite(trackingConfigurationFeature.parameters.cookieSameSite);\n\n          // Set secure cookies if specified\n          if (trackingConfigurationFeature.parameters.secureCookie)\n            matomoTracker.setSecureCookie(true);\n\n          // Enable Browser Feature Detection if specified\n          if (trackingConfigurationFeature.parameters.detectBrowserFeatures)\n            matomoTracker.enableBrowserFeatureDetection();\n\n          // Enable JavaScript error tracking (as events)\n          if (trackingConfigurationFeature.parameters.trackJavaScriptErrors)\n            matomoTracker.enableJSErrorTracking();\n\n          // Enable Heart Beat Timer if specified\n          if (typeof trackingConfigurationFeature.parameters.heartBeatTimer !== 'number')\n            matomoTracker.enableHeartBeatTimer(\n              trackingConfigurationFeature.parameters.heartBeatTimer,\n            );\n\n          // Set local domains\n          if (Array.isArray(trackingConfigurationFeature.parameters.localDomains))\n            matomoTracker.setDomains(trackingConfigurationFeature.parameters.localDomains);\n\n          // Enable DoNotTrack\n          if (trackingConfigurationFeature.parameters.enableDoNotTrack)\n            matomoTracker.setDoNotTrack(true);\n\n          // Require the right consent\n          if (trackingConfigurationFeature.parameters?.consentRequirement === 'TRACKING')\n            matomoTracker.requireConsent();\n          else if (trackingConfigurationFeature.parameters?.consentRequirement === 'COOKIE')\n            matomoTracker.requireCookieConsent();\n\n          // Set global custom dimensions\n          trackingConfigurationFeature.parameters.customDimensions?.forEach((it) => {\n            matomoTracker.setCustomDimension(it.index, it.value);\n          });\n\n          // Disable Campaign Parameters Tracking\n          if (trackingConfigurationFeature.parameters.disableCampaignParametersTracking)\n            matomoTracker.disableCampaignParameters();\n        },\n        deps: [MatomoTracker],\n        multi: true,\n      },\n      {\n        provide: MATOMO_TRACKING_INTERNAL_CONFIGURATION,\n        useValue: {\n          ...defaultTrackingConfiguration,\n          ...trackingConfigurationFeature?.parameters,\n        },\n      },\n    );\n  }\n\n  const mockedTrackerFeature = features.find((it) => it.kind === 'DUMMY_TRACKER');\n  if (mockedTrackerFeature) {\n    // TODO: Changer l'injection des fonctions set / get / invoke\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const preloadedTrackerFeature = features.find((it) => it.kind === 'EXTERNAL_TRACKER');\n\n  const trackerInjectionFeature = features.find((it) => it.kind === 'TRACKER_INJECTION') as\n    | {\n        kind: 'TRACKER_INJECTION';\n        parameters: Promise<Partial<MatomoTrackers>>;\n      }\n    | undefined;\n  if (trackerInjectionFeature) {\n    providers.push({\n      provide: ENVIRONMENT_INITIALIZER,\n      useFactory:\n        (trackers: Promise<MatomoTrackers>, document: Document, debugTracing: boolean) => () =>\n          trackers.then(injectMatomoTrackingScriptFactory(document, debugTracing))\n        ,\n      deps: [MATOMO_TRACKERS_INTERNAL_CONFIGURATION, DOCUMENT, MATOMO_DEBUG_TRACING],\n      multi: true,\n    });\n  }\n\n  return [\n    ...providers,\n    {\n      provide: MATOMO_TRACKERS_INTERNAL_CONFIGURATION,\n      useFactory: () =>\n        Promise.all([defaultTrackers, trackerInjectionFeature?.parameters]).then(\n          ([defaultTrackers, trackers]) => ({\n            ...defaultTrackers,\n            ...trackers,\n          }),\n        ),\n    },\n    {\n      provide: ENVIRONMENT_INITIALIZER,\n      useFactory: (platformId: object) => () => {\n        if (!isPlatformBrowser(platformId))\n          console.warn('ngx-Matomo is active only on browser platform.');\n      },\n      deps: [PLATFORM_ID],\n      multi: true,\n    },\n    {\n      provide: MATOMO_TRACKER_SET_FUNCTION,\n      useFactory: (platformId: object, debugTracing: boolean) =>\n        setFunctionFactory(!isPlatformBrowser(platformId), debugTracing),\n      deps: [PLATFORM_ID, MATOMO_DEBUG_TRACING],\n    },\n    {\n      provide: MATOMO_TRACKER_GET_FUNCTION,\n      useFactory: (platformId: object, debugTracing: boolean) =>\n        getFunctionFactory(!isPlatformBrowser(platformId), debugTracing),\n      deps: [PLATFORM_ID],\n    },\n    {\n      provide: MATOMO_TRACKER_INVOKE_FUNCTION,\n      useFactory: (platformId: object, debugTracing: boolean) =>\n        invokeFunctionFactory(!isPlatformBrowser(platformId), debugTracing),\n      deps: [PLATFORM_ID],\n    },\n  ];\n}\n","import {\n  MatomoRouteTrackingConfiguration,\n  MatomoTrackers,\n  MatomoTrackingConfiguration,\n} from './matomo-configuration';\n\nexport type MatomoFeature =\n  | { kind: 'EXTERNAL_TRACKER' }\n  | { kind: 'DUMMY_TRACKER' }\n  | {\n      kind: 'TRACKER_INJECTION';\n      parameters: Promise<Partial<MatomoTrackers>>;\n    }\n  | {\n      kind: 'TRACKING_CONFIGURATION';\n      parameters: Partial<MatomoTrackingConfiguration>;\n    }\n  | {\n      kind: 'ROUTE_TRACKING';\n      parameters: Partial<MatomoRouteTrackingConfiguration>;\n    }\n  | { kind: 'DEBUG_TRACING' };\n\n/**\n * Require a Matomo script to be loaded and trackers to be set.\n *\n * @param trackers\n * @param {string} configuration.scriptUrl URL of the Matomo JS script to execute.\n * @param configuration.trackers list of trackers to register\n * @param {string} configuration.trackers[].trackerUrl URL of the tracker to register\n * @param {number} configuration.trackers[].siteId Website Id of the tracker to register\n *\n * @returns feature request for Matomo tracking\n */\nexport function withTrackers(\n  trackers: Partial<MatomoTrackers> | Promise<Partial<MatomoTrackers>>,\n): MatomoFeature {\n  return {\n    kind: 'TRACKER_INJECTION',\n    parameters: Promise.resolve(trackers).then((it) => ({ trackers: [], ...it })),\n  };\n}\n\nexport function withExternalTracker(): MatomoFeature {\n  return { kind: 'EXTERNAL_TRACKER' };\n}\n\nexport function withDummyTracker(): MatomoFeature {\n  return { kind: 'DUMMY_TRACKER' };\n}\n\nexport function withConfig(configuration: Partial<MatomoTrackingConfiguration>): MatomoFeature {\n  return { kind: 'TRACKING_CONFIGURATION', parameters: configuration };\n}\n\nexport function withRouteTracking(\n  configuration: Partial<MatomoRouteTrackingConfiguration>,\n): MatomoFeature {\n  return { kind: 'ROUTE_TRACKING', parameters: configuration };\n}\n\nexport function withDebugTracing(): MatomoFeature {\n  return { kind: 'DEBUG_TRACING' };\n}\n","/*\n * Public API Surface of ngx-matomo\n */\n\nexport * from './lib/matomo-tracker.service';\nexport * from './lib/matomo-providers';\nexport * from './lib/matomo-features';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}